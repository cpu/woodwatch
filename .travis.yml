language: go
go:
  - "stable"

# Override the base install phase so that the project can be installed using
# `-mod=vendor` to use vendored dependencies
install:
  # Install `golangci-lint` using their installer script
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.17.1
  # Install `cover` and `goveralls` without `GO111MODULE` enabled so that we
  # don't download project dependencies and just put the tools in $GOPATH/bin
  - GO111MODULE=off go get golang.org/x/tools/cmd/cover
  - GO111MODULE=off go get github.com/mattn/goveralls
  # Install the project (with the race detector enabled) so any project binaries
  # are available for integration testing.
  - go install -mod=vendor -v -race ./...

script:
  # Vet Go source code using the linter config (see .golang-ci.yml)
  - golangci-lint run
  # Run project unit tests (with the race detector enabled and atomic coverage
  # profile collection)
  - go test -mod=vendor -v -race -covermode=atomic -coverprofile=coverage.out ./...
  # Upload collected coverage profile to goveralls
  - goveralls -coverprofile=coverage.out -service=travis-ci

deploy:
  - provider: script
    skip_cleanup: true
    script: curl -sL https://git.io/goreleaser | bash
    on:
      tags: true
      condition: $TRAVIS_OS_NAME = linux

  - provider: releases
    api_key: ${GITHUB_TOKEN}
    file: dist/woodwatch_*
    skip_cleanup: true
    overwrite: true
    file_glob: true
    on:
      tags: true
      condition: $TRAVIS_OS_NAME = linux
